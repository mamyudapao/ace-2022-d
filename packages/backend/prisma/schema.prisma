generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  nickname      String
  password      String
  refresh_token String
  gender        Gender
  birthday      String
  prefecture    Prefecture
  profile       Profile?
  messages      Message[]
  talks         Talk[]
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  Unread        UnreadMessage[]
}

model Profile {
  id              String          @id @default(uuid())
  user            User            @relation(fields: [user_id], references: [id])
  user_id         String          @unique
  description     String?
  avatar          String?
  height          Int?
  weight          Weight?
  education       Education?
  income          Income?
  holiday         Holiday?
  work_prefecture Prefecture?
  born_prefecture Prefecture?
  blood_type      BloodType?
  marry_intention MarryIntention?
  date_plans      DatePlan[]
  hobbies         Hobby[]
}

model DatePlan {
  id                   String           @id @default(uuid())
  name                 String
  image                String
  category             DatePlanCategory @relation(fields: [date_plan_categoryId], references: [id])
  date_plan_categoryId String
  profiles             Profile[]
}

model DatePlanCategory {
  id         String     @id @default(uuid())
  name       String
  date_plans DatePlan[]
}

model Hobby {
  id               String        @id @default(uuid())
  name             String
  category         HobbyCategory @relation(fields: [hobby_categoryId], references: [id])
  hobby_categoryId String
  profiles         Profile[]
}

model HobbyCategory {
  id      String  @id @default(uuid())
  name    String
  hobbies Hobby[]
}

model Message {
  id            String          @id @default(uuid())
  talk          Talk            @relation(fields: [talk_id], references: [id])
  talk_id       String
  author        User            @relation(fields: [author_id], references: [id])
  author_id     String
  content       String?
  attachment    String?
  created_at    DateTime        @default(now())
  deleted_at    DateTime?
  UnreadMessage UnreadMessage[]
}

model Talk {
  id              String          @id @default(uuid())
  deleted_at      DateTime?
  messages        Message[]
  users           User[]
  unread_messages UnreadMessage[]
}

model UnreadMessage {
  user       User    @relation(fields: [user_id], references: [id])
  user_id    String
  talk       Talk    @relation(fields: [talk_id], references: [id])
  talk_id    String
  message    Message @relation(fields: [message_id], references: [id])
  message_id String

  @@id([user_id, talk_id])
}

enum Gender {
  MALE
  FEMALE
}

enum Weight {
  THIN
  LITTLE_THIN
  NORMAL
  LITTLE_FAT
  FAT
}

enum Education {
  ELEMENTARY_SCHOOL
  JUNIOR_HIGH_SCOOL
  HIGH_SCHOOL
  UNIVERSITY
  OTHER
}

enum Income {
  LOWER_THAN_300
  BETWEEN_300_AND_500
  BETWEEN_500_AND_700
  BETWEEN_700_AND_1000
  OVER_1000
}

enum Holiday {
  EVERYDAY
  WEEKDAY
  WEEKEND
  NO_HOLIDAY
  DONT_KNOW
}

enum MarryIntention {
  WANT_TO_MARRY
  IF_I_MEET_THE_RIGHT_PERSON
  NO_PLAN
}

enum BloodType {
  A
  B
  AB
  O
}

enum Prefecture {
  HOKKAIDO
  AOMORI
  IWATE
  MIYAGI
  AKITA
  YAMAGATA
  FUKUSHIMA
  IBARAKI
  TOCHIGI
  GUNMA
  SAITAMA
  CHIBA
  TOKYO
  KANAGAWA
  NIIGATA
  TOYAMA
  ISHIKAWA
  FUKUI
  YAMANASHI
  NAGANO
  GIFU
  SHIZUOKA
  AICHI
  MIE
  SHIGA
  KYOTO
  OSAKA
  HYOGO
  NARA
  WAKAYAMA
  TOTTORI
  SHIMANE
  OKAYAMA
  HIROSHIMA
  YAMAGUCHI
  TOKUSHIMA
  KAGAWA
  EHIME
  KOCHI
  FUKUOKA
  SAGA
  NAGASAKI
  KUMAMOTO
  OITA
  MIYAZAKI
  KAGOSHIMA
  OKINAWA
}
