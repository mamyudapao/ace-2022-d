name: Build and Push

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          docker compose -f ./packages/infrastructure/docker/docker-compose.local.yml build
          docker compose -f ./packages/infrastructure/docker/docker-compose.local.yml push backend
          docker compose -f ./packages/infrastructure/docker/docker-compose.local.yml push frontend
          echo "::set-output name=frontend::$ECR_REGISTRY/$ECR_REPOSITORY-frontend"
          echo "::set-output name=backend::$ECR_REGISTRY/$ECR_REPOSITORY-backend"

      - name: Render Amazon ECS task definition
        id: render-container-frontend
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: aws/task-definition.json
          container-name: Web-Server
          image: ${{ steps.build-image.outputs.frontend }}

      - name: Render Amazon ECS task definition
        id: render-container-backend
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: aws/task-definition.json
          container-name: Web-Server
          image: ${{ steps.build-image.outputs.backend }}

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container-frontend.outputs.task-definition }}
          service: api-ecs-service
          cluster: api-ecs-cluster

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container-backend.outputs.task-definition }}
          service: api-ecs-service
          cluster: api-ecs-cluster
